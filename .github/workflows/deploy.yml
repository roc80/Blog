name: Deploy Blog to Server

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 虚拟机上运行

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 检出仓库代码

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm install # 安装项目依赖

      - name: Build Blog
        run: npm run build # 执行 Astro 构建命令

      - name: Deploy via Rsync
        uses: appleboy/ssh-action@master # 使用 SSH Action 来执行 rsync 命令
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 定义源和目标路径
            SOURCE_DIR="${{ github.workspace }}/dist/" # GitHub Actions 虚拟机上的 dist 目录
            REMOTE_PATH="${{ secrets.REMOTE_PATH }}" # 服务器上的目标路径

            # 确保目标路径存在
            ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "mkdir -p $REMOTE_PATH"

            # Rsync 命令
            # -avz: 归档模式，详细输出，压缩传输
            # --delete: 删除目标目录中源目录不存在的文件
            # --exclude=".user.ini": 排除 .user.ini 文件
            # --delete-excluded: 确保排除的文件（如 .user.ini）不会被删除，即使它在目标目录中存在
            # 最后一个参数的斜杠很重要:
            #   SOURCE_DIR/ 表示同步目录的内容，而不是目录本身
            #   REMOTE_PATH/ 表示同步到目标目录内部，而不是创建子目录
            rsync -avz --delete --exclude=".user.ini" "$SOURCE_DIR" "${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:$REMOTE_PATH/"

            echo "Deployment completed successfully using Rsync!"